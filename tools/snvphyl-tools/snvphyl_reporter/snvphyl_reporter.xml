<tool id="snvphyl_reporter" name="Snvphyl Reporter" version="1.6.0-dev">
	<description>Runs Snvphyl reporter</description>
	<requirements>
		<requirement type="package" version="1.6-dev">snvphyl</requirement>
	</requirements>
	<command interpreter="perl">
		/\$VCF2PSEUDO/reporter.pl --output $output
		#if $job_type.type == "bam_quality"
			--step bam_quality_data
			#if $job_type.json
				--json $job_type.json
			#end if
			#for $f in $job_type.input.keys#
				--bam "$f=$job_type.input[$f]"
			#end for
		#else if $job_type.type == "filter_stats"
			#if $job_type.json
				--json $job_type.json
			#end if
			--step record_filter_stats
			--pseudo $job_type.pseudo
		#else if $job_type.type == "reference_info"
			#if $job_type.json
				--json $job_type.json
			#end if
			--step record_reference_info
			--ref-file $job_type.ref_file
			--ref-sequencer $job_type.sequencer --ref-source $job_type.source
			--plasmids $job_type.plasmid --genus $job_type.genus
			--species $job_type.species --serotype $job_type.serotype
		#else if $job_type.type == "file_sizes"
			#if $job_type.json
				--json $job_type.json
			#end if
			--step record_file_sizes
			--file-type $job_type.format
			#for $f in $job_type.sizes.keys#
				--file-sizes "$f=$job_type.sizes[$f]"
			#end for
		#else if $job_type.type == "run_parameters"
			#if $job_type.json
				--json $job_type.json
			#end if
			--step record_run_parameters
			--masked-positions $job_type.masked
			--run-id $job_type.run_id
			--freebayes-params '$job_type.freebayes'
			--min-coverage $job_type.min_cov
			--max-coverage $job_type.max_cov
			--processors $job_type.processors
			--smalt-index '$job_type.smalt_index'
			--smalt-map '$job_type.smalt_map'
			--trim-clean '$job_type.trim_clean'
			--vcf2core-cpus $job_type.core_cpus
			#for $f in $job_type.fastqs.keys#
				--read-file "$f=$job_type.fastqs[$f]"
			#end for
		#end if
	</command>

	<inputs>
		<conditional name="job_type">
			<param name="type" type="select" label="Job Type">
				<option value="bam_quality">Bam Quality Data</option>
				<option value="filter_stats">Record Filter Stats</option>
				<option value="reference_info">Record Reference Info</option>
				<option value="file_sizes">Record File Sizes</option>
				<option value="run_parameters">Record Run Parameters</option>
			</param>
				<when value="bam_quality">
					<param name="json" type="data" label="JSON File (optional)" help="The JSON file containing reporter data for the run." optional="true" />
					<param name="input" type="data_collection" label="Bam files Collection" help="Please enter a list collection of bam files" optional="false" collection_type="list" />
				</when>
				<when value="filter_stats">
					<param name="json" type="data" label="JSON File (optional)" help="The JSON file containing reporter data for the run." optional="true" />
					<param name="pseudo" type="data" format="txt" label="Pseudoalign positions file" help="Please enter the psuedoalign-positions.tsv file" optional="false" />
				</when>
				<when value="reference_info">
					<param name="json" type="data" label="JSON File (optional)" help="The JSON file containing reporter data for the run." optional="true" />
					<param name="ref_file" type="data" format="fasta" label="Reference fasta file" optional="false" />
					<param name="sequencer" type="text" label="Sequencer type" help="The type of sequencer used to generate the reference reads." optional="true" />
					<param name="source" type="text" label="Source" help="The lab/site/team that the reference sequence was retrieved from." optional="true" />
					<param name="plasmid" type="boolean" label="Plasmid present" help="Are plasmids present int the reference sequence?" truevalue="yes" falsevalue="no" />
					<param name="genus" type="text" label="Genus" help="The genus of the reference orgamism." optional="true" />
					<param name="species" type="text" label="Species" help="The species of the reference organism." optional="true" />
					<param name="serotype" type="text" label="Serotype" help="The serotype of the reference orgamism." optional="true" />
				</when>
				<when value="file_sizes">
					<param name="json" type="data" label="JSON File (optional)" help="The JSON file containing reporter data for the run." optional="true" />
					<param name="format" type="text" label="File Format" help="The file format of the input files." optional="false" />
					<param name="sizes" type="data_collection" label="Files Collection" help="The list of files to be analyzed." optional="false" collection_type="list" />
				</when>
				<when value="run_parameters">
					<param name="json" type="data" label="JSON File (optional)" help="The JSON file containing reporter data for the run." optional="true" />
					<param name="fastqs" type="data_collection" label="Fastq Files Collection" help="The list of fastq files to be analyzed." optional="false" collection_type="list" />
					<param name="masked" type="data" format="txt" label="Masked Positions File" optional="true"/>
					<param name="run_id" type="text" label="Run ID" optional="true" />
					<param name="freebayes" type="text" label="Freebays parameters" help="The freebayes parameters string" optional="true" />
					<param name="min_cov" type="integer" value="15" label="Minimum coverage" optional="true" />
					<param name="max_cov" type="integer" value="200" label="Maximum coverage" optional="true" />
					<param name="processors" type="integer" value="1" label="Processors" help="The number of processors used for parallelization" />
					<param name="smalt_index" type="text" label="Smalt Index" help="The parameter string for smalt_index." optional="true" />
					<param name="smalt_map" type="text" label="Smalt Map" help="The parameter string for smalt_map." optional="true" />
					<param name="trim_clean" type="text" label="Trim Clean" help="The parameter string for trim_clean." optional="true" />
					<param name="core_cpus" type="integer" value="1" label="VCF2Core CPUs" help="The number of CPUs used for vcf2core stage." optional="true" />
				</when>
			</conditional>
	</inputs>

	<outputs>
		<data name="output" format="txt" label="Reporter Output" />
	</outputs>

	<tests>
		<test>
			<param name="input">
				<collection type="list">
					<element name="sample1" value="sample1.bam" />
					<element name="sample2" value="sample2.bam" />
					<element name="sample3" value="sample3.bam" />
				</collection>
			</param>
			<output name="output" file="bam_reporter_out.txt" />
		</test>
	</tests>

	<help>

This tool runs the SNVPhyl Reporter pipeline.
	</help>

</tool>
